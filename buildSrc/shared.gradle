java {
    sourceCompatibility 1.8
    targetCompatibility 1.8
}

repositories {
    mavenCentral()
}


remotes {
    cluster {
        host = System.getenv("clusterHost")
        user = System.getenv("username")
        password = System.getenv("password")
    }
}

jar {
    manifest {
        attributes "Main-Class": "com.skywaet.hadoop.${project.name}.HadoopDriver"
    }

    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    implementation 'org.apache.hadoop:hadoop-common:3.3.6'
    implementation 'org.apache.hadoop:hadoop-mapreduce-client-core:3.3.6'
}


tasks.register('publishToCluster') {
    dependsOn tasks.named("build")
    doLast {
        ssh.run {
            session(remotes.cluster) {
                executeScript("""
#!/bin/sh
if [ ! -d bigdata/task1/${project.name} ]; then
echo '"bigdata/task1/${project.name}/ directory not exists. creating'
mkdir bigdata/task1/${project.name}
fi
"""
                ) { result -> println result }
                put from: jar.getArchiveFile().get().asFile, into: "bigdata/task1/${project.name}/"
            }
        }
    }
}

tasks.register('runTask') {
    dependsOn tasks.named('publishToCluster')
    doLast {
        ssh.run {
            session(remotes.cluster) {
                execute("./bigdata/task1/run.sh ${project.name} ${jar.getArchiveFileName().get()}"
                ) { result -> println result }
            }
        }
    }
}